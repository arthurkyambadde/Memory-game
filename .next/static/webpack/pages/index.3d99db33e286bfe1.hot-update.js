"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./Utils/helpers/MemoryCell.helpers.ts":
/*!*********************************************!*\
  !*** ./Utils/helpers/MemoryCell.helpers.ts ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"choseMemoryCell\": function() { return /* binding */ choseMemoryCell; }\n/* harmony export */ });\nlet chosenCellValue = [];\nlet chosenCellElements = [];\nconst choseMemoryCell = (event, chosenstyles)=>{\n    const cell = event.currentTarget.innerHTML;\n    const cellElementid = event.currentTarget.id;\n    chosenCellValue.push(cell);\n    chosenCellElements.push(cellElementid);\n    console.log(chosenCellElements);\n    console.log(event.target);\n    if (chosenCellValue.length === 2 && chosenCellValue[1] === chosenCellValue[0]) {\n        //chnage styles for the chosen elements\n        const firstChosenCell = document.getElementById(cellElementid[0]);\n        console.log(\"first\", firstChosenCell);\n        const secondChosenCell = document.getElementById(cellElementid[1]);\n        console.log(\"two\", secondChosenCell);\n        // firstChosenCell?.classList.remove(`${styles.revealed_memoryCell}`);\n        // secondChosenCell?.classList.remove(`${styles.revealed_memoryCell}`);\n        firstChosenCell === null || firstChosenCell === void 0 ? void 0 : firstChosenCell.classList.add(chosenstyles);\n        secondChosenCell === null || secondChosenCell === void 0 ? void 0 : secondChosenCell.classList.add(chosenstyles);\n        //empty chosen cell values array\n        chosenCellValue = [];\n        //change styles of chosen matching cells\n        chosenCellElements = [];\n    } else if (chosenCellValue.length === 2 && chosenCellValue[1] !== chosenCellValue[0]) {\n        console.log(\"Try again\");\n        //empty chosen cell values array\n        chosenCellValue = [];\n        //empty chosen cell elements array\n        chosenCellElements = [];\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9VdGlscy9oZWxwZXJzL01lbW9yeUNlbGwuaGVscGVycy50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsSUFBSUEsa0JBQTRCLEVBQUU7QUFDbEMsSUFBSUMscUJBQStCLEVBQUU7QUFFOUIsTUFBTUMsa0JBQWtCLENBQzdCQyxPQUNBQyxlQUNHO0lBQ0gsTUFBTUMsT0FBT0YsTUFBTUcsYUFBYSxDQUFDQyxTQUFTO0lBQzFDLE1BQU1DLGdCQUF3QkwsTUFBTUcsYUFBYSxDQUFDRyxFQUFFO0lBRXBEVCxnQkFBZ0JVLElBQUksQ0FBQ0w7SUFDckJKLG1CQUFtQlMsSUFBSSxDQUFDRjtJQUV4QkcsUUFBUUMsR0FBRyxDQUFDWDtJQUNaVSxRQUFRQyxHQUFHLENBQUNULE1BQU1VLE1BQU07SUFFeEIsSUFBSWIsZ0JBQWdCYyxNQUFNLEtBQUssS0FBS2QsZUFBZSxDQUFDLEVBQUUsS0FBS0EsZUFBZSxDQUFDLEVBQUUsRUFBRTtRQUM3RSx1Q0FBdUM7UUFDdkMsTUFBTWUsa0JBQWtCQyxTQUFTQyxjQUFjLENBQUNULGFBQWEsQ0FBQyxFQUFFO1FBQ2hFRyxRQUFRQyxHQUFHLENBQUMsU0FBU0c7UUFFckIsTUFBTUcsbUJBQW1CRixTQUFTQyxjQUFjLENBQUNULGFBQWEsQ0FBQyxFQUFFO1FBQ2pFRyxRQUFRQyxHQUFHLENBQUMsT0FBT007UUFFbkIsc0VBQXNFO1FBQ3RFLHVFQUF1RTtRQUV2RUgsNEJBQUFBLDZCQUFBQSxLQUFBQSxJQUFBQSxnQkFBaUJJLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDaEIsYUFBYTtRQUM1Q2MsNkJBQUFBLDhCQUFBQSxLQUFBQSxJQUFBQSxpQkFBa0JDLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDaEIsYUFBYTtRQUU3QyxnQ0FBZ0M7UUFDaENKLGtCQUFrQixFQUFFO1FBQ3BCLHdDQUF3QztRQUN4Q0MscUJBQXFCLEVBQUU7SUFDekIsT0FBTyxJQUFJRCxnQkFBZ0JjLE1BQU0sS0FBSyxLQUFLZCxlQUFlLENBQUMsRUFBRSxLQUFLQSxlQUFlLENBQUMsRUFBRSxFQUFFO1FBQ3BGVyxRQUFRQyxHQUFHLENBQUM7UUFDWixnQ0FBZ0M7UUFDaENaLGtCQUFrQixFQUFFO1FBQ3BCLGtDQUFrQztRQUNsQ0MscUJBQXFCLEVBQUU7SUFDekIsQ0FBQztBQUNILEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vVXRpbHMvaGVscGVycy9NZW1vcnlDZWxsLmhlbHBlcnMudHM/NTE1NSJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgY2hvc2VuQ2VsbFZhbHVlOiBzdHJpbmdbXSA9IFtdO1xubGV0IGNob3NlbkNlbGxFbGVtZW50czogc3RyaW5nW10gPSBbXTtcblxuZXhwb3J0IGNvbnN0IGNob3NlTWVtb3J5Q2VsbCA9IChcbiAgZXZlbnQ6IFJlYWN0Lk1vdXNlRXZlbnQ8SFRNTEJ1dHRvbkVsZW1lbnQsIE1vdXNlRXZlbnQ+LFxuICBjaG9zZW5zdHlsZXM6IHN0cmluZyxcbikgPT4ge1xuICBjb25zdCBjZWxsID0gZXZlbnQuY3VycmVudFRhcmdldC5pbm5lckhUTUw7XG4gIGNvbnN0IGNlbGxFbGVtZW50aWQ6IHN0cmluZyA9IGV2ZW50LmN1cnJlbnRUYXJnZXQuaWQ7XG5cbiAgY2hvc2VuQ2VsbFZhbHVlLnB1c2goY2VsbCk7XG4gIGNob3NlbkNlbGxFbGVtZW50cy5wdXNoKGNlbGxFbGVtZW50aWQpO1xuXG4gIGNvbnNvbGUubG9nKGNob3NlbkNlbGxFbGVtZW50cyk7XG4gIGNvbnNvbGUubG9nKGV2ZW50LnRhcmdldCk7XG5cbiAgaWYgKGNob3NlbkNlbGxWYWx1ZS5sZW5ndGggPT09IDIgJiYgY2hvc2VuQ2VsbFZhbHVlWzFdID09PSBjaG9zZW5DZWxsVmFsdWVbMF0pIHtcbiAgICAvL2NobmFnZSBzdHlsZXMgZm9yIHRoZSBjaG9zZW4gZWxlbWVudHNcbiAgICBjb25zdCBmaXJzdENob3NlbkNlbGwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjZWxsRWxlbWVudGlkWzBdKTtcbiAgICBjb25zb2xlLmxvZygnZmlyc3QnLCBmaXJzdENob3NlbkNlbGwpO1xuXG4gICAgY29uc3Qgc2Vjb25kQ2hvc2VuQ2VsbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNlbGxFbGVtZW50aWRbMV0pO1xuICAgIGNvbnNvbGUubG9nKCd0d28nLCBzZWNvbmRDaG9zZW5DZWxsKTtcblxuICAgIC8vIGZpcnN0Q2hvc2VuQ2VsbD8uY2xhc3NMaXN0LnJlbW92ZShgJHtzdHlsZXMucmV2ZWFsZWRfbWVtb3J5Q2VsbH1gKTtcbiAgICAvLyBzZWNvbmRDaG9zZW5DZWxsPy5jbGFzc0xpc3QucmVtb3ZlKGAke3N0eWxlcy5yZXZlYWxlZF9tZW1vcnlDZWxsfWApO1xuXG4gICAgZmlyc3RDaG9zZW5DZWxsPy5jbGFzc0xpc3QuYWRkKGNob3NlbnN0eWxlcyk7XG4gICAgc2Vjb25kQ2hvc2VuQ2VsbD8uY2xhc3NMaXN0LmFkZChjaG9zZW5zdHlsZXMpO1xuXG4gICAgLy9lbXB0eSBjaG9zZW4gY2VsbCB2YWx1ZXMgYXJyYXlcbiAgICBjaG9zZW5DZWxsVmFsdWUgPSBbXTtcbiAgICAvL2NoYW5nZSBzdHlsZXMgb2YgY2hvc2VuIG1hdGNoaW5nIGNlbGxzXG4gICAgY2hvc2VuQ2VsbEVsZW1lbnRzID0gW107XG4gIH0gZWxzZSBpZiAoY2hvc2VuQ2VsbFZhbHVlLmxlbmd0aCA9PT0gMiAmJiBjaG9zZW5DZWxsVmFsdWVbMV0gIT09IGNob3NlbkNlbGxWYWx1ZVswXSkge1xuICAgIGNvbnNvbGUubG9nKCdUcnkgYWdhaW4nKTtcbiAgICAvL2VtcHR5IGNob3NlbiBjZWxsIHZhbHVlcyBhcnJheVxuICAgIGNob3NlbkNlbGxWYWx1ZSA9IFtdO1xuICAgIC8vZW1wdHkgY2hvc2VuIGNlbGwgZWxlbWVudHMgYXJyYXlcbiAgICBjaG9zZW5DZWxsRWxlbWVudHMgPSBbXTtcbiAgfVxufTtcbiJdLCJuYW1lcyI6WyJjaG9zZW5DZWxsVmFsdWUiLCJjaG9zZW5DZWxsRWxlbWVudHMiLCJjaG9zZU1lbW9yeUNlbGwiLCJldmVudCIsImNob3NlbnN0eWxlcyIsImNlbGwiLCJjdXJyZW50VGFyZ2V0IiwiaW5uZXJIVE1MIiwiY2VsbEVsZW1lbnRpZCIsImlkIiwicHVzaCIsImNvbnNvbGUiLCJsb2ciLCJ0YXJnZXQiLCJsZW5ndGgiLCJmaXJzdENob3NlbkNlbGwiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwic2Vjb25kQ2hvc2VuQ2VsbCIsImNsYXNzTGlzdCIsImFkZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./Utils/helpers/MemoryCell.helpers.ts\n"));

/***/ })

});